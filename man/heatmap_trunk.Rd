% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmap_trunk#heatmap in gg#.R
\name{heatmap_trunk}
\alias{heatmap_trunk}
\title{Plot the trunk of a heatmap via geom_tile.
Plot the trunk (tiles) for heatmap}
\usage{
heatmap_trunk(
  ExpreessionSet_input = NULL,
  dat = iris[1:20, 1:4],
  label_df = iris[1:20, 1:4] \%>\% round(., 2),
  Z_by_row_or_col = "row",
  axis.y.position = "right",
  axis.text.size = 18,
  label.size = 7.8,
  label.y.adj = -0.09,
  label.color = "white",
  label.color.bg = "firebrick",
  color.key.height = 5,
  color.key.width = 1,
  tile.border.col = "black",
  tile.colors = c("black", "blue", "white", "orange", "red"),
  tile.size = 0.7,
  tile.border.size = 2
)
}
\arguments{
\item{ExpreessionSet_input}{ExpreessionSet if set no more need to set dat and label df seperately.
in the ExpreessionSet_input obj. label data were saved in the protocolData slot.}

\item{dat}{df.}

\item{label_df}{df. names need to be match with dat.}

\item{Z_by_row_or_col}{NULL or “row” or “col” 按照行或列进行Z标准化。}

\item{axis.y.position}{left or right. right as default. Position for the axis.text.y 调整坐标轴标题的位置。}

\item{axis.text.size}{size for axis text. 坐标轴文字的大小}

\item{label.size}{size for label text.}

\item{color.key.height}{unit cm. 图例的高}

\item{color.key.width}{unit cm. 图例的宽}

\item{tile.border.col}{color breaks for tiles in heatmap trunk. 改变格子边界的颜色}

\item{tile.colors}{colors v tiles fill in heatmap trunk. 注意调整此数据，要让平衡点的颜色是白色等分界色。}

\item{tile.size}{size of a tile, numeric, 0 ~ 1.}

\item{tile.border.size}{size of a tile border.}
}
\value{
return a pic plot (ggplot2.)
}
\description{
Plot the trunk of a heatmap via geom_tile.
Plot the trunk (tiles) for heatmap
}
\details{
plot the trunk via geom_tile and add labels via geom_shadowtext.
需求：
调整各个文字的缩放比例
调整格子内部label的填充色和外部轮廓色。
调整mapping使用的颜色 ## 后续搞
}
\examples{
\dontrun{
data("iris")
assayData <- iris[1:30,1:4] \%>\% t
phenoData <- iris[1:30,5, drop = F]
featureData <-  data.frame(variable = iris \%>\% colnames \%>\% `[`(.,1:4), type = c("A", "A", "B", "B"))
rownames(featureData) <- featureData[,1]

ExpressionSet <- ExpressionSet(assayData = assayData, ## 瑕佹眰鏄痬atrix鏍煎紡锛屽苟涓攕ample by col and feature by row.
                               phenoData = new("AnnotatedDataFrame",
                                               data = phenoData), ## 鍙互鏄暟鎹
                               featureData = new("AnnotatedDataFrame", data = featureData), ## 鍙互鏄暟鎹銆<82>
                               ## 閲囩敤protocol Data瀛樺偍
                               protocolData   = new("AnnotatedDataFrame", data = assayData \%>\% t \%>\% data.frame), ## 鍙互鏄暟鎹
                               experimentData = new("MIAME", title = "test"))
ExpressionSet@assayData$exprs
ExpressionSet@phenoData@data
ExpressionSet@featureData@data
ExpressionSet@protocolData@data

heatmap_ls <- heatmap_trunk(
    ExpreessionSet_input = ExpressionSet,
    # dat = iris[1:20,1:4] ,
    # label_df = iris[1:20,1:4] \%>\% round(., 2),
    Z_by_row_or_col = "row",
    axis.y.position = "right",
    axis.text.size = 18 , ## 璋冩暣鍧愭爣杞存爣绛剧殑瀛楀彿锛堝叾浠栧瓧鍙锋槸鍦ㄦ鍩虹涓婄缉鏀惧緱鍒扮殑锛<89>
    label.size = 7.8   , ## 璋冩暣label鐨勫瓧鍙<b7>
    label.y.adj = .03 , ##  璋冩暣label鐨勪綅缃<ae>
    label.color = "white" , ## label 鐨勫～鍏呰壊
    label.color.bg = "firebrick" , ## label 杞粨鐨勯鑹层€<82>
    color.key.height = 5,
    color.key.width  = 1,
    tile.border.col = "black" , ### color for tile border
    tile.colors = c("blue","steelblue","white","orange","red"),
    tile.size = .7,
    tile.border.size = 2)

# heatmap_ls$heatmap_trunk
ggsave("test newzi trunk.png", plot = heatmap_ls$heatmap_trunk, height = 5, width = 36)
}
}
